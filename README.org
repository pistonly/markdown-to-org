#+TITLE: markdown-to-org
#+AUTHOR: pistonly
#+OPTIONS: toc:nil

* markdown-to-org

This is an Emacs package for converting Markdown text to Org-mode format, with additional text processing features.

* Installation

** Using MELPA

If you use MELPA, you can install it with the following command:

#+BEGIN_SRC elisp
M-x package-install RET markdown-to-org RET
#+END_SRC

** Manual Installation

1. Clone this repository:
   #+BEGIN_SRC bash
   git clone https://github.com/pistonly/markdown-to-org.git
   #+END_SRC

2. Add the files to your =load-path=:
   - Open your Emacs configuration file (usually =~/.emacs.d/init.el= or =~/.emacs=)
   - Add the following line, replacing the path with your actual repository path:
   #+BEGIN_SRC elisp
   (add-to-list 'load-path "path/to/markdown-to-org")
   #+END_SRC

3. Load the package in your Emacs configuration:
   #+BEGIN_SRC elisp
   (require 'markdown-to-org)
   #+END_SRC

4. Ensure Python dependencies:
   - Make sure Python 3.6 or higher is installed on your system
   - The package uses =markdown-to-org.py= and =convert_func.py= for text processing
   - Conda environment is supported (if available)

5. Verify the installation:
   - Restart Emacs
   - Run =M-x markdown-to-org-convert-region= or =M-x markdown-to-org-convert-buffer= to verify the commands are available

Note: Make sure you have:
- Emacs 24.1 or higher
- Org-mode 9.0 or higher
- ob-python 0.1 or higher

If you encounter any issues:
- Check if =load-path= is correctly set
- Verify all required files are in the correct location
- Check the =*Messages*= buffer (=C-h e=) for any error messages
- Ensure Python path is correctly configured (can be set via =M-x customize= or =.dir-locals.el=)

* Usage

1. Open a buffer containing Markdown text in Emacs
2. Select the text region you want to convert
3. Run =M-x process-region-with-python-preset=
4. Select a processing method from the menu:
   - md2org: Convert Markdown to Org format
   - To Uppercase: Convert to uppercase
   - To Lowercase: Convert to lowercase
   - Word Count: Count words
   - Line Count: Count lines
5. If you select md2org, follow the prompts to enter the indent level and starting heading level
6. The converted text will be displayed in a new buffer

* Features

- Convert Markdown to Org-mode format
- Support custom indent levels
- Support custom starting heading levels
- Additional text processing features:
  - Case conversion
  - Word count
  - Line count
- Flexible Python path configuration:
  - Support Python in system PATH
  - Support conda environment
  - Customizable via customize or .dir-locals.el

* Dependencies

- Emacs 24.1 or higher
- Org-mode 9.0 or higher
- ob-python 0.1 or higher
- Python 3.6 or higher (for text processing)

* License

GNU General Public License v3.0 
